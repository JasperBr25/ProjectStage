{
  "data" : [
    {
      "id" : 1,
      "title": "Eigenschappen artikel",
      "query" :  "<p> PREFIX schema: http://schema.org/ <br> PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# <br> PREFIX service: http://purl.org/ontology/service# <br> SELECT DISTINCT ?properties <br> WHERE{ ?article a schema:NewsArticle. <br> ?article ?properties ?waarde } <br> limit 50</ p>",
      "explanation" : "Het PREFIXtrefwoord koppelt een voorvoegsellabel aan een IRL. Een vooraf gedefinieerde naam is een voorvoegsellabel en een lokaal deel, gescheiden door een dubbele punt. Een vooraf gedefinieerde naam wordt toegewezen aan een IRI door de IRI aan het prefix en het lokale gedeelte te koppelen. Het voorvoegsellabel of het lokale gedeelte is mogelijk leeg. Houd er rekening mee dat lokale SPARQL-namen toonaangevende cijfers toestaan, terwijl lokale XML-namen dit niet doen. Distinct zorg ervoor dat oplossingen in de reeks uniek zijn. Het vraagteken is het teken dat het een variabele is, in deze oefening is Properties een variabele. Deze variabele selecteert u, waar het artikel een nieuwsartikel is. Wat wilt de a zeggen: rdfs. Als laatste heeft u de 3 opties als voorbeeld: subject ==> predicate ==> object. Het limiet op het einde spreekt voor zich."
    },
    {
      "id" : 2,
      "title": "Laatste nieuwsartikel",
      "query" : "<p> PREFIX schema: http://schema.org/ <br> PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# <br> PREFIX service: http://purl.org/ontology/service# <br> PREFIX skos: http://www.w3.org/2004/02/skos/core# <br> SELECT ?article ?titel ?datum <br> WHERE { ?article a schema:NewsArticle. <br> ?article schema:headline <br> ?titel. ?article schema:datePublished ?datum. } <br> ORDER BY DESC(?datum) <br> limit 1</ p>",
      "explanation" : "Het PREFIXtrefwoord koppelt een voorvoegsellabel aan een IRI. Een vooraf gedefinieerde naam is een voorvoegsellabel en een lokaal deel, gescheiden door een dubbele punt. Een vooraf gedefinieerde naam wordt toegewezen aan een IRI door de IRI aan het prefix en het lokale gedeelte te koppelen. Het voorvoegsellabel of het lokale gedeelte is mogelijk leeg. Hier verwijst men naar verschillende sites die nodig zijn. Als volgt gaan we in SELECT het artikel, titel en datum selecteren. Dit zijn de 3 tabellen die u zal zien. Daarna gaan we coderen dat het artikel een nieuwsartikel is. Dit hebben we ook zo gedaan in de eerste oefening. Als volgt gaan we aanduiden dat de variabele titel een headline is en datum aanduiden dat het de datum is wanneer het is uitgebracht. Deze gegevens kunnen we uit de website halen van schema.org. Als laatste gaan we het ordenen van nieuw naar oud, zo kunnen we het laatste artikel terug krijgen. "
    },
    {
      "id" : 3,
      "title": "Verantwoordelijk persoon",
      "query" : "<p>PREFIX schema: http://schema.org/ <br> PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# <br> PREFIX service: http://purl.org/ontology/service# <br> SELECT (COUNT(?article) as ?article) ?Person <br> WHERE{ ?article a schema:NewsArticle. <br> ?article schema:accountablePerson ?Person.} <br> ORDER BY DESC(?article)</ p>",
      "explanation" : "Het PREFIXtrefwoord koppelt een voorvoegsellabel aan een IRI. Een vooraf gedefinieerde naam is een voorvoegsellabel en een lokaal deel, gescheiden door een dubbele punt. Een vooraf gedefinieerde naam wordt toegewezen aan een IRI door de IRI aan het prefix en het lokale gedeelte te koppelen. Het voorvoegsellabel of het lokale gedeelte is mogelijk leeg. Zoals u kan zien komen sommige prefixen terug zoals schema.org, daarin staan verschillende gegevens in die u kan gebruiken bij het opvragen van de query's. Als volgt in SELECT gaan we een count doen, dit zorgt voor: het optellen van een bepaald gegeven. In dit voorbeeld is het het optellen van de artikelen die als variabele de naam article heeft. De kolom wordt dan Person genoemd die dan aangeeft hoeveel artikelen die persoon is aangelinkt. In de WHERE gaan we de eerste kolom zetten als de soms van de artikelen en de tweede kolom zal de persoon komen die gelinked is aan de aantal artikelen. Deze gegevens achter schema: kunt u vinden op de website van schema.org. Daar hoeft u Persoon in te gegeven en daarin vindt u verschillende gegevens die u kan opvragen van een persoon zoals bijvoorbeeld: accountablePerson. Op die website vindt u alle informatie die u nodig heeft op iets op te vragen van een onderdeel zoals artikel of persoon. Als laatste gaan we de eerste kolom genaamd article ordenen van groot naar klein zodat het eerste resultaat dat we zien, het resultaat is van de persoon die het meest gelinked is aan artikelen.   "
    },
    {
      "id" : 4,
      "title": "Gebruikte klassen",
      "query" : "<p>PREFIX schema: http://schema.org/ <br> PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# <br> PREFIX service: http://purl.org/ontology/service# <br> PREFIX rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# <br> SELECT DISTINCT ?object <br> WHERE{ ?subject rdf:type ?object } <br> limit 50</ p>",
      "explanation" : "Het PREFIXtrefwoord koppelt een voorvoegsellabel aan een IRI. Een vooraf gedefinieerde naam is een voorvoegsellabel en een lokaal deel, gescheiden door een dubbele punt. Een vooraf gedefinieerde naam wordt toegewezen aan een IRI door de IRI aan het prefix en het lokale gedeelte te koppelen. Het voorvoegsellabel of het lokale gedeelte is mogelijk leeg. Dit zal ik vanaf nu niet meer uitleggen. In de SELECT gaan we terug een DISCTINCT plaatsen: zorg ervoor dat oplossingen in de reeks uniek zijn. Als volgt gaan we een variabele aangeven genaamd object die getoond wordt als een titel van de eerste kolom. Na deze SELECT gaan we beginnen aan de WHERE, de rdf:type = Het sleutelwoord a(rdf:type) kan worden gebruikt als een predikaat in een drievoudig patroon en is een alternatief voor de IRI. Als laatste gaan we een limiet zeggen van 50 resultaten.  "
    },
    {
      "id" : 5,
      "title": "Beschikbare PublicServices",
      "query" : "<p>PREFIX rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns# <br> PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# <br> SELECT ?PublicServices  (count(?sub) as ?aantal) <br> WHERE { ?sub a ?klasse .} <br> ORDER BY ?PublicServices <br> LIMIT 100</ p>",
      "explanation" : "Het PREFIXtrefwoord koppelt een voorvoegsellabel aan een IRI. Een vooraf gedefinieerde naam is een voorvoegsellabel en een lokaal deel, gescheiden door een dubbele punt. Een vooraf gedefinieerde naam wordt toegewezen aan een IRI door de IRI aan het prefix en het lokale gedeelte te koppelen. Het voorvoegsellabel of het lokale gedeelte is mogelijk leeg. Na de prefixen gaan we terug beginnen aan de SELECT waar we een variabel maken genaamd PublicServices die ook getoond wordt als eerste gegeven in de kolom. Als volgt gaan we een count doen die ervoor zorgt dat hij de aantal PublicServices optelt en steekt in de tweede kolom genaamd aantal. Daarnaa gaan we beginnen aan de WHERE, daar gaan we zorgen dat we alleen PublicServies krijgen die bestaan. Als laatste gaan we dat het geordend is van aantal, als laatste gaan we er een limiet opzetten van 100 resultaten. "
    },
    {
      "id" : 6,
      "title": "Ophalen unieke doelpublieken",
      "query" : "<p>PREFIX schema: http://schema.org/ <br> PREFIX rdfs: http://www.w3.org/2000/01/rdf-schema# <br> PREFIX service: http://purl.org/ontology/service# <br> PREFIX xsd: http://www.w3.org/2001/XMLSchema# <br> PREFIX cpsv: http://purl.org/vocab/cpsv# <br> SELECT DISTINCT ?PublicServices ?Doelpubliek <br>  WHERE { ?Doelpubliek a schema:audience.} <br> ORDER BY ?PublicServices <br> LIMIT 100</ p>",
      "explanation" : "Het PREFIXtrefwoord koppelt een voorvoegsellabel aan een IRI. Een vooraf gedefinieerde naam is een voorvoegsellabel en een lokaal deel, gescheiden door een dubbele punt. Een vooraf gedefinieerde naam wordt toegewezen aan een IRI door de IRI aan het prefix en het lokale gedeelte te koppelen. Het voorvoegsellabel of het lokale gedeelte is mogelijk leeg. Na de prefixen gaan we beginnen aan de SELECT waar we iets gaan selecteren en tonen bij de kolommen van de resultaten. De DISTINCT gaat ervoor zorgen dat we van alles 1 resultaat gaan krijgen. Als volgt gaan we 2 variabelen aanmaken die getoond gaan worden als de 2 kolommen in de resultaten. Daarna gaan we beginnen aan de WHERE, waar we de variabel Doelpubliek gaan gelijk stellen aan schema:audience, dit kunt u terug vinden in schema.org. Dit zorgt ervoor dat het de unieke doelpublieken ophaalt. Als laatste gaan we het ordenen op de variabel PublicServices en er een limiet op zetten van 100 resultaten.  "
    }
  ]
}